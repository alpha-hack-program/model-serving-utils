---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-{{ .Values.model.name }}-model-setup
  namespace: "{{ .Values.dataScienceProjectNamespace }}"
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  selector: {}
  backoffLimit: 10
  template:
    spec:
      containers:
        - name: create-ds-connections
          envFrom:
            - secretRef:
                name: aws-connection-{{ .Values.modelConnection.name }}  # Secret with S3 bucket credentials
            - secretRef:
                name: hf-creds  # Secret with HuggingFace credentials
          env:
            - name: AWS_S3_ENDPOINT_SCHEME
              value: {{ .Values.modelConnection.scheme }}
          args:
            - -ec
            - |-
              MODELS_MOUNT_PATH=/mnt/models              
              MODEL_ROOT="{{ .Values.model.root }}"
              MODEL_ID="{{ .Values.model.id }}"

              # Check if MODELS_MOUNT_PATH exists and fail if it doesn't
              if [ ! -d "${MODELS_MOUNT_PATH}" ]; then
                  echo "Directory '${MODELS_MOUNT_PATH}' does not exist. Exiting..."
                  exit 1
              fi

              huggingface-cli download ${MODEL_ROOT}/${MODEL_ID} --token ${HF_TOKEN} \
                --cache-dir ${MODELS_MOUNT_PATH}/.cache \
                --local-dir ${MODELS_MOUNT_PATH}/${MODEL_ROOT}/${MODEL_ID}

              # Set up AWS CLI
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
              AWS_S3_USE_PATH_STYLE=1

              # Check if the bucket exists and create it if it doesn't
              echo ">>>>>> Checking if S3 bucket exists..."
              if aws s3api head-bucket --bucket ${AWS_S3_BUCKET} --endpoint-url "${AWS_S3_ENDPOINT}" 2>&1 | grep -q "Not Found"; then
                  echo "Bucket ${AWS_S3_BUCKET} does not exist. Creating..."
                  aws s3api create-bucket --bucket ${AWS_S3_BUCKET} --endpoint-url "${AWS_S3_ENDPOINT}"
              else
                  echo "Bucket ${AWS_S3_BUCKET} already exists. Continuing..."
              fi

              # Upload the model to the bucket excluding safetensor files
              echo ">>>>>> Uploading model to AWS_S3_BUCKET ${AWS_S3_BUCKET}"
              aws s3 sync ${MODELS_MOUNT_PATH}/${MODEL_ROOT}/${MODEL_ID} s3://${AWS_S3_BUCKET}/${MODEL_ROOT}/${MODEL_ID}/ --exclude ".git/*" --exclude ".git" --endpoint-url "${AWS_S3_ENDPOINT}" 
          command:
            - /bin/bash
          image: {{ .Values.setup.image }}
          # imagePullPolicy: Always
          volumeMounts:
            - name: models-volume
              mountPath: /mnt/models
      restartPolicy: Never
      serviceAccountName: default
      volumes:
        - name: models-volume
          persistentVolumeClaim:
            claimName: models-pvc
